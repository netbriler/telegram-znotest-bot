from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from services.questions import Question


def get_question4x1_inline_markup(question: Question, chapter_id: int, selected_answer=None, wrong_answer=None,
                                  is_answered=False):
    markup = InlineKeyboardMarkup(row_width=5)

    markup.add(*[InlineKeyboardButton(_, callback_data=f'question_{question.id}_label') for _ in
                 ['–ê', '–ë', '–í', '–ì', '–î']])

    for i in range(1, 6):
        markup.insert(InlineKeyboardButton('‚úÖ' if i == selected_answer else '‚ùå' if i == wrong_answer else '‚¨ú',
                                           callback_data=f'answer_{i}'))

    return _get_base_question_inline_markup(markup, question, chapter_id, is_answered)


def get_question4x4_inline_markup(question: Question, chapter_id: int,
                                  selected_answers=None, wrong_answers=None, is_answered=False):
    if wrong_answers is None:
        wrong_answers = [None, None, None, None]
    if selected_answers is None:
        selected_answers = [None, None, None, None]

    markup = InlineKeyboardMarkup(row_width=6)

    markup.add(*[InlineKeyboardButton(_, callback_data=f'question_{question.id}_label') for _ in
                 ['‚†Ä', '–ê', '–ë', '–í', '–ì', '–î']])

    for i in range(1, 5):
        markup.insert(InlineKeyboardButton(i, callback_data=f'question_{question.id}_label'))
        for j in range(1, 6):
            markup.insert(
                InlineKeyboardButton('‚úÖ' if j == selected_answers[i - 1] else '‚ùå' if j == wrong_answers[i - 1] else '‚¨ú',
                                     callback_data=f'answer_{i}_{j}'))

    return _get_base_question_inline_markup(markup, question, chapter_id, is_answered)


def _get_base_question_inline_markup(markup: InlineKeyboardMarkup, question: Question, chapter_id: int,
                                    is_answered=False):
    if not is_answered:
        markup.insert(InlineKeyboardButton('üö© –û—Ç–≤–µ—Ç–∏—Ç—å', callback_data='answer_submit'))

    markup.add(InlineKeyboardButton('‚ùì –†–µ—à–µ–Ω–∏–µ', callback_data=f'question_{question.id}_solution'),
               InlineKeyboardButton('‚û° –°–ª–µ–¥—É—é—â–µ–µ', callback_data=f'question_{question.id}_next'))

    markup.add(InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data=f'chapter_{chapter_id}'))
    return markup
